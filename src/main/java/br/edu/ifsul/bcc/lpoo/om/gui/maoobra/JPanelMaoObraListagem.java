/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package br.edu.ifsul.bcc.lpoo.om.gui.maoobra;

import br.edu.ifsul.bcc.lpoo.om.Controle;
import br.edu.ifsul.bcc.lpoo.om.model.Cliente;
import br.edu.ifsul.bcc.lpoo.om.model.MaoObra;
import java.util.Collection;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Carol
 */
public class JPanelMaoObraListagem extends javax.swing.JPanel {
    
   private JPanelMaoObra pnlMaoObra;
   private Controle controle;

    /**
     * Creates new form JPanelMaoObraListagem
     */
    public JPanelMaoObraListagem(JPanelMaoObra pnlMaoObra, Controle controle) {
        this.pnlMaoObra = pnlMaoObra;
        this.controle = controle;
        initComponents();
        populaTable();
    }
    
     public void populaTable(){
        
        DefaultTableModel model =  (DefaultTableModel) tblListagemMaoObra.getModel();//recuperacao do modelo da tabela

        model.setRowCount(0);//elimina as linhas existentes (reset na tabela)

        try {

            Collection <MaoObra> listMaoObra =  controle.getConexaoJDBC().listMaoObras(null);
            for(MaoObra m : listMaoObra){
                model.addRow(new Object[]{m,
                   // m.getId(), 
                                          m.getDescricao(), 
                                          m.getValor()});
                                     

            }

        } catch (Exception ex) {

            JOptionPane.showMessageDialog(this, "Erro ao listar Mão de Obras -:"+ex.getLocalizedMessage(), "Mão de Obra", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }        
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlSul = new javax.swing.JPanel();
        btnRemover = new javax.swing.JButton();
        pnlNorte = new javax.swing.JPanel();
        lblDescricao = new javax.swing.JLabel();
        txfDescricao = new javax.swing.JTextField();
        btnFiltro = new javax.swing.JButton();
        pnlCentro = new javax.swing.JPanel();
        jspMaoObra = new javax.swing.JScrollPane();
        tblListagemMaoObra = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        btnRemover.setText("Remover");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });
        pnlSul.add(btnRemover);

        add(pnlSul, java.awt.BorderLayout.PAGE_END);

        lblDescricao.setText("Filtrar por Descrição:");
        pnlNorte.add(lblDescricao);

        txfDescricao.setColumns(15);
        pnlNorte.add(txfDescricao);

        btnFiltro.setText("Filtrar");
        btnFiltro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnFiltroMouseClicked(evt);
            }
        });
        btnFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFiltroActionPerformed(evt);
            }
        });
        pnlNorte.add(btnFiltro);

        add(pnlNorte, java.awt.BorderLayout.PAGE_START);

        tblListagemMaoObra.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Código", "Descrição", "Valor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jspMaoObra.setViewportView(tblListagemMaoObra);

        pnlCentro.add(jspMaoObra);

        add(pnlCentro, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFiltroActionPerformed
        // TODO add your handling code here:
        System.out.println("CLICOU NO FILTRO");
        
        if (txfDescricao.getText() != ""){
          
            DefaultTableModel model =  (DefaultTableModel) tblListagemMaoObra.getModel();//recuperacao do modelo da tabela

            model.setRowCount(0);//elimina as linhas existentes (reset na tabela)

            try {

                Collection <MaoObra> listMaoObra =  controle.getConexaoJDBC().listMaoObras(txfDescricao.getText());
                for(MaoObra m : listMaoObra){
                 model.addRow(new Object[]{m,
                                         // m.getId(), 
                                          m.getDescricao(), 
                                          m.getValor()});
                }

            } catch (Exception ex) {

                JOptionPane.showMessageDialog(this, "Erro ao listar Mão de Obras -:"+ex.getLocalizedMessage(), "Mão de Obra", JOptionPane.ERROR_MESSAGE);
                ex.printStackTrace();
            }        
      } else {
         populaTable();
      }
     
    }//GEN-LAST:event_btnFiltroActionPerformed

    private void btnFiltroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnFiltroMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnFiltroMouseClicked

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        // TODO add your handling code here:
        
        System.out.println("CLICOU NO REMOVER");
         int indice = tblListagemMaoObra.getSelectedRow();//recupera a linha selecionada
            if(indice > -1){

                DefaultTableModel model =  (DefaultTableModel) tblListagemMaoObra.getModel(); //recuperacao do modelo da table

                Vector linha = (Vector) model.getDataVector().get(indice);//recupera o vetor de dados da linha selecionada

               MaoObra m = (MaoObra) linha.get(0); //model.addRow(new Object[]{u, u.getNome(), ...
                
                try {
                    System.out.println("id : " + m.getId() + "   " + m.getDescricao());
                    controle.getConexaoJDBC().remover(m);
                    JOptionPane.showMessageDialog(this, "Mão de Obra removida!", "Mão de Obra", JOptionPane.INFORMATION_MESSAGE);
                    populaTable(); //refresh na tabela

                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Erro ao remover Mão de Obra -:"+ex.getLocalizedMessage(), "Mão de Obra", JOptionPane.ERROR_MESSAGE);
                    ex.printStackTrace();
                }                        

            }else{
                  JOptionPane.showMessageDialog(this, "Selecione uma linha para remover!", "Remoção", JOptionPane.INFORMATION_MESSAGE);
            }                          
    }//GEN-LAST:event_btnRemoverActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFiltro;
    private javax.swing.JButton btnRemover;
    private javax.swing.JScrollPane jspMaoObra;
    private javax.swing.JLabel lblDescricao;
    private javax.swing.JPanel pnlCentro;
    private javax.swing.JPanel pnlNorte;
    private javax.swing.JPanel pnlSul;
    private javax.swing.JTable tblListagemMaoObra;
    private javax.swing.JTextField txfDescricao;
    // End of variables declaration//GEN-END:variables
}
